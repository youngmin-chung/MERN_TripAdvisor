{"version":3,"sources":["api/theme.js","api/alertsetupcomponent.js","api/homecomponent.js","api/advisoryaddcomponent.js","api/advisorylistcomponent.js","api/App.js","index.js","images/worldwide.png"],"names":["createMuiTheme","typography","useNextVariants","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","AlertSetupCompoenent","props","useReducer","state","newState","msg","snackBarMsg","contactServer","resArr","setState","useEffect","fetchAlert","a","fetch","method","headers","body","JSON","stringify","query","response","json","payload","data","setupalerts","replace","split","console","log","message","theme","Card","style","color","CardContent","textAlign","src","logo","width","alt","CardHeader","title","paddingTop","fontWeight","fontSize","Table","size","aria-label","TableBody","map","row","TableRow","key","TableCell","component","scope","HomeComponent","Typography","float","paddingRight","AddAdvisoryComponent","snackBarAddMsg","name","country","alert","countryname","date","showMsg","countryList","fetchCountries","alerts","length","onAddClicked","d","Date","getTime","date_format_str","getFullYear","toString","getMonth","getDate","getHours","parseInt","getMinutes","getSeconds","advisory","user","postadvisory","snackbarMsg","emptyorundefined","undefined","TextField","onChange","e","target","value","helperText","Autocomplete","id","options","item","getOptionLabel","option","selectedCountry","result","find","renderInput","params","label","variant","fullWidth","Button","type","marginLeft","marginTop","onClick","AdvisoryListComponent","selectedComplete","radioBtn","travellers","regions","subregions","selectedList","tableInfo","fetchTravellers","fetchRegions","fetchSubregions","Accept","travellerList","regionList","subregionList","onSelectChange","selectedOption","fetchAdvisories","advisoryList","nameforadvisory","alertsforregion","alertsforsubregion","FormControl","RadioGroup","defaultValue","FormControlLabel","control","Radio","TableContainer","Paper","marginRight","stickyHeader","TableHead","align","selectedValue","index","App","useState","anchorEl","setAnchorEl","handleClose","AppBar","position","Toolbar","IconButton","event","currentTarget","Menu","open","Boolean","onClose","MenuItem","Link","to","exact","path","render","Snackbar","autoHideDuration","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.c53c7ee6.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles'\r\nexport default createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    common: { black: '#000', white: '#fff' },\r\n    background: { paper: '#fff', default: '#fafafa' },\r\n    primary: {\r\n      light: 'rgba(227, 140, 64, 1)',\r\n      main: 'rgba(139, 87, 42, 1)',\r\n      dark: 'rgba(90, 55, 24, 1)',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff4081',\r\n      main: '#f50057',\r\n      dark: '#c51162',\r\n      contrastText: '#fff',\r\n    },\r\n    error: {\r\n      light: '#e57373',\r\n      main: '#f44336',\r\n      dark: '#d32f2f',\r\n      contrastText: '#fff',\r\n    },\r\n    text: {\r\n      primary: 'rgba(0, 0, 0, 0.87)',\r\n      secondary: 'rgba(0, 0, 0, 0.54)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n  },\r\n})\r\n","/* Title: alertsetupcomponent.js\r\n * Name: Youngmin Chung\r\n * Student #: 0816299\r\n * Description: It's a component for alert setup\r\n */\r\n\r\nimport React, { useReducer, useEffect } from 'react'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n} from '@material-ui/core'\r\nimport theme from './theme'\r\nimport '../App.css'\r\nimport logo from '../images/worldwide.png'\r\n\r\nconst AlertSetupCompoenent = ({ props }) => {\r\n  const initialState = {\r\n    msg: '',\r\n    snackBarMsg: '',\r\n    contactServer: false,\r\n    resArr: [],\r\n  }\r\n\r\n  const reducer = (state, newState) => ({ ...state, ...newState })\r\n  const [state, setState] = useReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    fetchAlert()\r\n  }, [])\r\n\r\n  // fetch for alert\r\n  const fetchAlert = async () => {\r\n    try {\r\n      setState({\r\n        contactServer: true,\r\n      })\r\n      props('Runing setup...')\r\n\r\n      let response = await fetch(\r\n        'https://mern-trip-advisor.herokuapp.com//graphql',\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n          body: JSON.stringify({ query: '{setupalerts} ' }),\r\n        }\r\n      )\r\n      let json = await response.json()\r\n      let payload = json.data\r\n      setState({\r\n        contactServer: true,\r\n        // return the JSON to a variable called payload, then\r\n        resArr: payload.setupalerts\r\n          .replace(/([.])\\s*(?=[A-Z])/g, '$1|')\r\n          .split('|'),\r\n      })\r\n      props('Alert collection setup completed.')\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({ msg: `Problem loading server data - ${error.message}` })\r\n    }\r\n  }\r\n\r\n  // return\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Card style={{ color: 'brown' }}>\r\n        <CardContent style={{ textAlign: 'center' }}>\r\n          <img src={logo} style={{ width: '25%' }} alt='global_image' />\r\n          <br />\r\n          <CardHeader\r\n            title='World Wide Travel Alerts'\r\n            color='inherit'\r\n            style={{\r\n              textAlign: 'center',\r\n              paddingTop: '1vh',\r\n              fontWeight: 'bold',\r\n            }}\r\n          />\r\n        </CardContent>\r\n\r\n        <CardHeader\r\n          title='Alert Setup - Details'\r\n          color='inherit'\r\n          style={{ textAlign: 'center', fontSize: '1em' }}\r\n        />\r\n        <CardContent>\r\n          <Table size='small' aria-label='a dense table'>\r\n            <TableBody>\r\n              {state.resArr.map((row) => (\r\n                <TableRow key={row}>\r\n                  <TableCell component='th' scope='row'>\r\n                    {row}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </CardContent>\r\n      </Card>\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\nexport default AlertSetupCompoenent\r\n","/* Title: homecomponent.js\r\n * Name: Youngmin Chung\r\n * Student #: 0816299\r\n * Description: It's a component for home page\r\n */\r\n\r\nimport React from 'react'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core'\r\nimport theme from './theme'\r\nimport logo from '../images/worldwide.png'\r\n\r\n// An example of a React Functional Component using JSX syntax\r\nconst HomeComponent = () => {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Card style={{ color: 'brown' }}>\r\n        <CardContent style={{ textAlign: 'center' }}>\r\n          <img src={logo} style={{ width: '25%' }} alt='global_image' />\r\n          <br />\r\n          <CardHeader\r\n            title='World Wide Travel Alerts'\r\n            color='inherit'\r\n            style={{\r\n              textAlign: 'center',\r\n              paddingTop: '1vh',\r\n              fontWeight: 'bold',\r\n            }}\r\n          />\r\n          <Typography\r\n            color='primary'\r\n            style={{\r\n              float: 'right',\r\n              paddingRight: '1vh',\r\n              fontSize: 'smaller',\r\n            }}>\r\n            &copy;YC- 2021\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\n\r\nexport default HomeComponent\r\n","/* Title: advisoryaddcomponent.js\r\n * Name: Youngmin Chung\r\n * Student #: 0816299\r\n * Description: It's a component for adding advisory with traveller's name\r\n */\r\nimport React, { useReducer, useEffect } from 'react'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n} from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport theme from './theme'\r\nimport '../App.css'\r\nimport logo from '../images/worldwide.png'\r\n\r\nconst AddAdvisoryComponent = ({ props }) => {\r\n  const initialState = {\r\n    msg: '',\r\n    snackBarMsg: '',\r\n    snackBarAddMsg: '',\r\n    // input\r\n    name: '',\r\n    country: '',\r\n    alert: '',\r\n    // append\r\n    countryname: '',\r\n    text: '',\r\n    date: '',\r\n    contactServer: false,\r\n    showMsg: false,\r\n    countryList: [],\r\n  }\r\n  const reducer = (state, newState) => ({ ...state, ...newState })\r\n  const [state, setState] = useReducer(reducer, initialState)\r\n  useEffect(() => {\r\n    fetchCountries()\r\n  }, [])\r\n\r\n  // fetch for countries\r\n  const fetchCountries = async () => {\r\n    try {\r\n      setState({\r\n        contactServer: true,\r\n        snackBarMsg: 'Attempting to load users from server...',\r\n      })\r\n      let response = await fetch(\r\n        'https://mern-trip-advisor.herokuapp.com/graphql',\r\n        {\r\n          method: 'POST',\r\n          headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n          body: JSON.stringify({ query: '{alerts{name, text, date}} ' }),\r\n        }\r\n      )\r\n      let json = await response.json()\r\n      let payload = json.data\r\n      setState({\r\n        countryList: payload.alerts,\r\n        contactServer: true,\r\n      })\r\n      props(`found ${payload.alerts.length} countries`)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({\r\n        msg: `Problem loading server data - ${error.message}`,\r\n      })\r\n    }\r\n  }\r\n\r\n  // function for adding button\r\n  const onAddClicked = async () => {\r\n    var d = new Date()\r\n    d = new Date(d.getTime())\r\n    var date_format_str =\r\n      d.getFullYear().toString() +\r\n      '-' +\r\n      ((d.getMonth() + 1).toString().length === 2\r\n        ? (d.getMonth() + 1).toString()\r\n        : '0' + (d.getMonth() + 1).toString()) +\r\n      '-' +\r\n      (d.getDate().toString().length === 2\r\n        ? d.getDate().toString()\r\n        : '0' + d.getDate().toString()) +\r\n      ' ' +\r\n      (d.getHours().toString().length === 2\r\n        ? d.getHours().toString()\r\n        : '0' + d.getHours().toString()) +\r\n      ':' +\r\n      ((parseInt(d.getMinutes() / 5) * 5).toString().length === 2\r\n        ? (parseInt(d.getMinutes() / 5) * 5).toString()\r\n        : '0' + (parseInt(d.getMinutes() / 5) * 5).toString()) +\r\n      ':' +\r\n      ((parseInt(d.getSeconds() / 5) * 5).toString().length === 2\r\n        ? (parseInt(d.getSeconds() / 5) * 5).toString()\r\n        : '0' + (parseInt(d.getSeconds() / 5) * 5).toString())\r\n    let advisory = {\r\n      user: state.name,\r\n      name: state.country,\r\n      text: state.alert,\r\n      date: date_format_str,\r\n    }\r\n\r\n    try {\r\n      let response = await fetch('http://localhost:5000/graphql', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json; charset=utf-8' },\r\n        body: JSON.stringify({\r\n          query: `mutation{postadvisory(user: \"${advisory.user}\",name: \"${advisory.name}\", text:\"${advisory.text}\", date: \"${advisory.date}\") {user, name, text, date}}`,\r\n        }),\r\n      })\r\n      let json = await response.json()\r\n      setState({\r\n        showMsg: true,\r\n        name: '',\r\n        country: '',\r\n      })\r\n\r\n      props(`added advisory on ` + json.data.postadvisory.date)\r\n    } catch (error) {\r\n      setState({\r\n        snackbarMsg: error.message,\r\n        showMsg: true,\r\n      })\r\n    }\r\n  }\r\n\r\n  // handler for input name\r\n  const handleNameInput = (e) => {\r\n    setState({ name: e.target.value })\r\n  }\r\n\r\n  // handler for input country\r\n  const handleCountryInput = (e, selectedCountry) => {\r\n    const result = state.countryList.find(\r\n      ({ name }) => name === selectedCountry\r\n    )\r\n    setState({\r\n      alert: result.text,\r\n      country: selectedCountry,\r\n    })\r\n  }\r\n\r\n  // check input value is empty or undefined\r\n  const emptyorundefined =\r\n    state.name === undefined ||\r\n    state.name === '' ||\r\n    state.country === undefined ||\r\n    state.country === ''\r\n\r\n  // return\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Card style={{ color: 'brown' }}>\r\n        <CardContent style={{ textAlign: 'center' }}>\r\n          <img src={logo} style={{ width: '25%' }} alt='global_image' />\r\n          <br />\r\n          <CardHeader\r\n            title='World Wide Travel Alerts'\r\n            color='inherit'\r\n            style={{\r\n              textAlign: 'center',\r\n              paddingTop: '1vh',\r\n              fontWeight: 'bold',\r\n            }}\r\n          />\r\n        </CardContent>\r\n        <CardHeader\r\n          title={'Add Advisory'}\r\n          style={{ textAlign: 'center', fontWeight: 'bold' }}\r\n        />\r\n        <CardContent>\r\n          <TextField\r\n            onChange={handleNameInput}\r\n            helperText=\"Enter user's name here\"\r\n            value={state.name}\r\n          />\r\n          <br />\r\n          <Autocomplete\r\n            id='lab8users'\r\n            value=''\r\n            options={state.countryList.map((item) => item.name)}\r\n            getOptionLabel={(option) => option}\r\n            style={{ width: 300 }}\r\n            onChange={handleCountryInput}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label='countries'\r\n                variant='outlined'\r\n                fullWidth\r\n              />\r\n            )}\r\n          />\r\n          <br />\r\n\r\n          <CardContent>\r\n            {<Typography style={{ color: 'brown' }}>{state.msg}</Typography>}\r\n          </CardContent>\r\n\r\n          <Button\r\n            type='button'\r\n            variant='contained'\r\n            color='primary'\r\n            style={{ marginLeft: '28%', marginTop: '8%' }}\r\n            disabled={emptyorundefined}\r\n            onClick={onAddClicked}>\r\n            ADD ADVISORY\r\n          </Button>\r\n        </CardContent>\r\n      </Card>\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\n\r\nexport default AddAdvisoryComponent\r\n","/* Title: advisorylistcomponent.js\r\n * Name: Youngmin Chung\r\n * Student #: 0816299\r\n * Description: It's a component for advisory list\r\n */\r\nimport React, { useReducer, useEffect } from 'react'\r\nimport { MuiThemeProvider } from '@material-ui/core/styles'\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  TextField,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  Paper,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from '@material-ui/core'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\nimport theme from './theme'\r\nimport '../App.css'\r\nimport logo from '../images/worldwide.png'\r\n\r\nconst AdvisoryListComponent = ({ props }) => {\r\n  const initialState = {\r\n    msg: '',\r\n    selectedComplete: '',\r\n    radioBtn: 'traveller',\r\n    travellers: [],\r\n    regions: [],\r\n    subregions: [],\r\n    selectedList: [],\r\n    tableInfo: [],\r\n  }\r\n\r\n  const reducer = (state, newState) => ({ ...state, ...newState })\r\n  const [state, setState] = useReducer(reducer, initialState)\r\n  // useEffect\r\n  useEffect(() => {\r\n    fetchTravellers()\r\n    fetchRegions()\r\n    fetchSubregions()\r\n  }, [])\r\n\r\n  // fetch for travellers\r\n  const fetchTravellers = async () => {\r\n    try {\r\n      let response = await fetch(\r\n        'https://mern-trip-advisor.herokuapp.com//graphql',\r\n        {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json; charset=utf-8',\r\n            Accept: 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            query: '{ advisory }',\r\n          }),\r\n        }\r\n      )\r\n\r\n      let json = await response.json()\r\n      let payload = json.data\r\n      let travellerList = []\r\n      travellerList = payload.advisory\r\n\r\n      setState({\r\n        selectedList: travellerList,\r\n        travellers: travellerList,\r\n      })\r\n\r\n      props(`found ${travellerList.length} travellers`)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({\r\n        msg: `Problem loading server data - ${error.message}`,\r\n      })\r\n    }\r\n  }\r\n  // fetch for regions\r\n  const fetchRegions = async () => {\r\n    try {\r\n      let response = await fetch('http://localhost:5000/graphql', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json; charset=utf-8',\r\n          Accept: 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: '{ regions }',\r\n        }),\r\n      })\r\n\r\n      let json = await response.json()\r\n      let payload = json.data\r\n      let regionList = []\r\n      regionList = payload.regions\r\n\r\n      setState({\r\n        regions: regionList,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({\r\n        msg: `Problem loading server data - ${error.message}`,\r\n      })\r\n    }\r\n  }\r\n\r\n  // fetch for subregions\r\n  const fetchSubregions = async () => {\r\n    try {\r\n      let response = await fetch('http://localhost:5000/graphql', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json; charset=utf-8',\r\n          Accept: 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: '{ subregions }',\r\n        }),\r\n      })\r\n\r\n      let json = await response.json()\r\n      let payload = json.data\r\n      let subregionList = []\r\n      subregionList = payload.subregions\r\n\r\n      setState({\r\n        subregions: subregionList,\r\n      })\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({\r\n        msg: `Problem loading server data - ${error.message}`,\r\n      })\r\n    }\r\n  }\r\n\r\n  // method for radio button change\r\n  const onRadioBtnChange = (e) => {\r\n    setState((state.radioBtn = e.target.value))\r\n\r\n    switch (state.radioBtn) {\r\n      case 'traveller':\r\n        setState(\r\n          (state.selectedList = state.travellers),\r\n          (state.tableInfo = [])\r\n        )\r\n        break\r\n      case 'region':\r\n        setState((state.selectedList = state.regions), (state.tableInfo = []))\r\n        break\r\n      case 'subregion':\r\n        setState(\r\n          (state.selectedList = state.subregions),\r\n          (state.tableInfo = [])\r\n        )\r\n        break\r\n      default:\r\n        setState((state.selectedList = []), (state.tableInfo = []))\r\n        break\r\n    }\r\n\r\n    props(`found ${state.selectedList.length} ${state.radioBtn}s`)\r\n  }\r\n\r\n  // call fetchAdvisories whenever user select radio button\r\n  const onSelectChange = async (e, selectedOption) => {\r\n    if (selectedOption !== null) {\r\n      setState((state.selectedComplete = selectedOption))\r\n      await fetchAdvisories()\r\n    }\r\n  }\r\n\r\n  // fetch for advisories\r\n  const fetchAdvisories = async () => {\r\n    try {\r\n      let query = ''\r\n      switch (state.radioBtn) {\r\n        case 'traveller':\r\n          query = `{ nameforadvisory(user: \"${state.selectedComplete}\"){user, name, text, date} }`\r\n          break\r\n        case 'region':\r\n          query = `{ alertsforregion(region: \"${state.selectedComplete}\") {country name text date region subregion} }`\r\n          break\r\n        case 'subregion':\r\n          query = `{ alertsforsubregion(subregion: \"${state.selectedComplete}\") {country name text date region subregion} }`\r\n          break\r\n        default:\r\n          break\r\n      }\r\n\r\n      let response = await fetch('http://localhost:5000/graphql', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json; charset=utf-8',\r\n          Accept: 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          query: query,\r\n        }),\r\n      })\r\n\r\n      let json = await response.json()\r\n      let payload = json.data\r\n      let advisoryList = []\r\n\r\n      switch (state.radioBtn) {\r\n        case 'traveller':\r\n          advisoryList = payload.nameforadvisory\r\n          break\r\n        case 'region':\r\n          advisoryList = payload.alertsforregion\r\n          break\r\n        case 'subregion':\r\n          advisoryList = payload.alertsforsubregion\r\n          break\r\n        default:\r\n          break\r\n      }\r\n\r\n      setState({\r\n        tableInfo: advisoryList,\r\n      })\r\n\r\n      props(`found ${advisoryList.length} alerts for ${state.selectedComplete}`)\r\n    } catch (error) {\r\n      console.log(error)\r\n      setState({\r\n        msg: `Problem loading server data - ${error.message}`,\r\n      })\r\n    }\r\n  }\r\n\r\n  // return\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <Card style={{ color: 'brown' }}>\r\n        <CardContent style={{ textAlign: 'center' }}>\r\n          <img src={logo} style={{ width: '25%' }} alt='global_image' />\r\n          <br />\r\n          <CardHeader\r\n            title='World Wide Travel Alerts'\r\n            color='inherit'\r\n            style={{\r\n              fontSize: 15,\r\n              textAlign: 'center',\r\n              paddingTop: '3vh',\r\n              fontWeight: 'bold',\r\n            }}\r\n          />\r\n        </CardContent>\r\n\r\n        <CardHeader\r\n          title='List Advisories By:'\r\n          color='inherit'\r\n          style={{ textAlign: 'center', fontSize: '2em' }}\r\n        />\r\n        <CardContent style={{ marginLeft: '5%', textAlign: 'center' }}>\r\n          <FormControl style={{ width: '200%' }}>\r\n            <RadioGroup\r\n              row\r\n              defaultValue={state.radioBtn}\r\n              style={{ fontSize: '10', color: 'brown' }}\r\n              name='radiobuttons'\r\n              onChange={onRadioBtnChange}>\r\n              <FormControlLabel\r\n                value='traveller'\r\n                control={<Radio color='primary' />}\r\n                label='Traveller'\r\n              />\r\n              <FormControlLabel\r\n                value='region'\r\n                control={<Radio color='primary' />}\r\n                label='Region'\r\n              />\r\n              <FormControlLabel\r\n                value='subregion'\r\n                control={<Radio color='primary' />}\r\n                label='Subregion'\r\n              />\r\n            </RadioGroup>\r\n          </FormControl>\r\n          <br />\r\n          <Autocomplete\r\n            id='dataSelected'\r\n            value=''\r\n            options={state.selectedList.map((item) => item)}\r\n            getOptionLabel={(option) => option}\r\n            style={{ marginTop: '5%', width: 320 }}\r\n            onChange={onSelectChange}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label={state.radioBtn}\r\n                variant='outlined'\r\n                fullWidth\r\n              />\r\n            )}\r\n          />\r\n          {state.tableInfo.length > 0 && (\r\n            <TableContainer\r\n              component={Paper}\r\n              style={{ marginTop: '5%', marginRight: '3%' }}>\r\n              <Table stickyHeader>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      style={{\r\n                        color: 'brown',\r\n                        fontSize: 18,\r\n                        fontWeight: 'bold',\r\n                      }}>\r\n                      Country\r\n                    </TableCell>\r\n                    <TableCell\r\n                      align='left'\r\n                      style={{\r\n                        color: 'brown',\r\n                        fontSize: 18,\r\n                        fontWeight: 'bold',\r\n                      }}>\r\n                      Alert Information\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {state.tableInfo.map((selectedValue, index) => {\r\n                    return (\r\n                      <TableRow key={index}>\r\n                        <TableCell\r\n                          style={{\r\n                            color: 'brown',\r\n                            fontSize: 15,\r\n                            fontWeight: 'bold',\r\n                          }}\r\n                          component='th'>\r\n                          {selectedValue.name}\r\n                        </TableCell>\r\n                        <TableCell\r\n                          style={{\r\n                            color: 'brown',\r\n                            fontSize: 15,\r\n                            fontWeight: 'bold',\r\n                          }}\r\n                          component='td'>\r\n                          {selectedValue.text}\r\n                          <br />\r\n                          {selectedValue.date}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    )\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\n\r\nexport default AdvisoryListComponent\r\n","import React, { useState, useReducer } from 'react'\nimport { Route, Link, Redirect } from 'react-router-dom'\nimport Reorder from '@material-ui/icons/Reorder'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme'\nimport AlertComponent from './alertsetupcomponent'\nimport HomeComponent from './homecomponent'\nimport AdvisoryAddComponent from './advisoryaddcomponent'\nimport AdvisoryListComponent from './advisorylistcomponent'\nimport {\n  Toolbar,\n  AppBar,\n  Menu,\n  MenuItem,\n  IconButton,\n  Typography,\n  Snackbar,\n} from '@material-ui/core'\n\nconst App = () => {\n  const initialState = {\n    snackbarMsg: '',\n    contactServer: false,\n  }\n\n  const reducer = (state, newState) => ({ ...state, ...newState })\n  const [state, setState] = useReducer(reducer, initialState)\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const snackbarMsg = (snackbarMsg) => {\n    setState({\n      snackbarMsg: snackbarMsg,\n      contactServer: true,\n    })\n  }\n\n  const snackbarClose = () => {\n    setState({\n      contactServer: false,\n    })\n  }\n\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppBar position='static'>\n        <Toolbar>\n          <Typography variant='h6' color='inherit'>\n            TRIP ADVISOR - 2021\n          </Typography>\n          <IconButton\n            onClick={handleClick}\n            color='inherit'\n            style={{ marginLeft: 'auto', paddingRight: '1vh' }}>\n            <Reorder />\n          </IconButton>\n          <Menu\n            id='casestudy-menu'\n            anchorEl={anchorEl}\n            open={Boolean(anchorEl)}\n            onClose={handleClose}>\n            <MenuItem component={Link} to='/home' onClick={handleClose}>\n              Home\n            </MenuItem>\n            <MenuItem component={Link} to='/alerts' onClick={handleClose}>\n              Reset Alerts\n            </MenuItem>\n            <MenuItem component={Link} to='/addadvisory' onClick={handleClose}>\n              Add Advisory\n            </MenuItem>\n            <MenuItem component={Link} to='/listadvisory' onClick={handleClose}>\n              List Advisories\n            </MenuItem>\n          </Menu>\n        </Toolbar>\n      </AppBar>\n      <div>\n        <Route exact path='/' render={() => <Redirect to='/home' />} />\n        <Route\n          path='/alerts'\n          render={() => <AlertComponent props={snackbarMsg} />}\n        />\n        <Route\n          path='/addadvisory'\n          render={() => <AdvisoryAddComponent props={snackbarMsg} />}\n        />\n        <Route\n          path='/listadvisory'\n          render={() => <AdvisoryListComponent props={snackbarMsg} />}\n        />\n        <Route path='/home' component={HomeComponent} />\n      </div>\n      <Snackbar\n        open={state.contactServer}\n        message={state.snackbarMsg}\n        autoHideDuration={2000}\n        onClose={snackbarClose}\n      />\n    </MuiThemeProvider>\n  )\n}\nexport default App\n","// Week 7 stuff\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./App.css\";\n// import FunctionalNonJSX from \"./week7/functionalnonjsx\";\n// ReactDOM.render(\n//   React.createElement(FunctionalNonJSX, {\n//     somedata: \"stuff for non jsx component\"\n//   }),\n//   document.getElementById(\"root\")\n// );\n\n// Week 8 stuff\nimport React from 'react'\nimport { render } from 'react-dom'\n//import App from \"./Week8/App\";\nimport App from './api/App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nrender(\n  <Router>\n    <App />\n  </Router>,\n  document.querySelector('#root')\n)\n\n// Week 10\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// //import Street from \"./week10/test/alltrafficcomponent\";\n// import Street from \"./week10/lab9/street\";\n// ReactDOM.render(<Street />, document.getElementById(\"root\"));\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import S4 from \"./week11/scenario4enhanced\";\n// ReactDOM.render(<S4 />, document.getElementById(\"root\"));\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import ChatApp from \"./project2/chatapp\";\n// ReactDOM.render(<ChatApp />, document.getElementById(\"root\"));\n\n// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import Ex2 from \"./week11/c2clientexercises/exercise2\";\n// ReactDOM.render(<Ex2 />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/worldwide.9e5d399c.png\";"],"sourceRoot":""}